[{"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"13","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"14","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"17","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"18","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"19","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"20","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":744,"mtime":1609456659901,"results":"26","hashOfConfig":"27"},{"size":549,"mtime":1610150696519,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1608688998071,"results":"29","hashOfConfig":"27"},{"size":2085,"mtime":1610769855901,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1609533221735,"results":"31","hashOfConfig":"27"},{"size":7441,"mtime":1610770041610,"results":"32","hashOfConfig":"27"},{"size":3102,"mtime":1610769797058,"results":"33","hashOfConfig":"27"},{"size":5026,"mtime":1609976239415,"results":"34","hashOfConfig":"27"},{"size":1901,"mtime":1609475336254,"results":"35","hashOfConfig":"27"},{"size":1500,"mtime":1610769966179,"results":"36","hashOfConfig":"27"},{"size":11015,"mtime":1610574771526,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1609533141976,"results":"38","hashOfConfig":"27"},{"size":303,"mtime":1609533175841,"results":"39","hashOfConfig":"27"},{"size":1054,"mtime":1609533163091,"results":"40","hashOfConfig":"27"},{"size":4184,"mtime":1609608918471,"results":"41","hashOfConfig":"27"},{"size":792,"mtime":1610574566737,"results":"42","hashOfConfig":"27"},{"size":621,"mtime":1610518443385,"results":"43","hashOfConfig":"27"},{"size":620,"mtime":1610772570172,"results":"44","hashOfConfig":"27"},{"size":678,"mtime":1610772543654,"results":"45","hashOfConfig":"27"},{"size":183,"mtime":1610488939818,"results":"46","hashOfConfig":"27"},{"size":3337,"mtime":1610772724180,"results":"47","hashOfConfig":"27"},{"size":445,"mtime":1610771075672,"results":"48","hashOfConfig":"27"},{"size":234,"mtime":1610518495344,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1610574440453,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1610766726157,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"14b8tbk",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["111","112"],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["113","114"],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["115","116","117","118","119","120","121","122","123","124","125"],"import React, { Component } from 'react';\nimport { render } from \"@testing-library/react\";\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Label, Col, Row, Modal, ModalHeader, ModalBody, Form, FormGroup, Input } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\n\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.addComment(this.props.campsiteId, values.rating, values.author, values.text);\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button className=\"fa fa-lg fa-pencil\" outline onClick={this.toggleModal}>Submit Comment</Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Label htmlFor=\"rating\" md={2}>Rating</Label>\n                            <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                placeholder=\"Type Here\"\n                                className=\"form-control\"\n                                validators={{\n                                    required,\n                                }}>\n                                <option value='1'>1</option>\n                                <option value='2'>2</option>\n                                <option value='3'>3</option>\n                                <option value='4'>4</option>\n                                <option value='5'>5</option>\n                            </Control.select>\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".rting\"\n                                show=\"touched\"\n                                component=\"div\"\n                                messages={{\n                                    required: 'Required',\n                                }}\n                            />\n                            <Label htmlFor=\"author\" md={2}>Your Name</Label>\n                            <Control.text model=\".author\" id=\"author\" name=\"fauthor\"\n                                placeholder=\"Type Here\"\n                                className=\"form-control\"\n                                validators={{\n                                    required,\n                                    minLength: minLength(2),\n                                    maxLength: maxLength(15)\n                                }}\n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".author\"\n                                show=\"touched\"\n                                component=\"div\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be at least 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                }}\n                            />\n                            <Label htmlFor=\"text\" md={2}>Comment</Label>\n                            <Control.textarea model=\".text\" id=\"text\" name=\"text\" rows=\"6\"\n                                placeholder=\"Type Here\"\n                                className=\"form-control\"\n                                validators={{ required }}\n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".text\"\n                                show=\"touched\"\n                                component=\"div\"\n                                messages={{\n                                    required: 'Required',\n                                }}\n                            />\n\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit Comment</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction RenderCampsite({ campsite }) {\n    return (\n        <div className=\"col-md-5 m-1\">\n            <Card>\n                <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                <CardBody>\n                    <CardText>{campsite.description}</CardText>\n                </CardBody>\n            </Card>\n        </div>\n    )\n}\n\nfunction RenderComments({ comments, addComment, campsiteId }) {\n    if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                {comments.map(comment => <div key={comment.id}>{comment.text}<br />--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}<br /><br /></div>)}\n                <CommentForm campsiteId={campsiteId} addComment={addComment} />\n            </div>\n        )\n    }\n    return (\n        <div></div>\n    )\n}\n\nfunction CampsiteInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments\n                        comments={props.comments}\n                        addComment={props.addComment}\n                        campsiteId={props.campsite.id}\n                    />\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div></div>\n    )\n}\n\n\n\nexport default CampsiteInfo","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",["126"],"import React, { Component } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { focusableElements } from 'reactstrap/lib/utils';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        alert(`Username: ${this.usernam.value} Password: ${this.password.value} Remember: ${this.remember.checked}`);\n        this.toggleModal();\n        event.preventDefault();\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <Jumbotron fluid>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h1>NuCamp</h1>\n                                <h2>a better way to camp</h2>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Navbar dark sticky=\"top\" expand=\"md\">\n                <div className=\"container\">\n                    <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"/assets/images/logo.png\" height=\"30\" width=\"30\" alt=\"NuCamp Logo\" /></NavbarBrand>\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/home\">\n                                    <i className=\"fa fa-home fa-lg\" /> Home\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/directory\">\n                                    <i className=\"fa fa-list fa-lg\" /> Directory\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                    <i className=\"fa fa-info fa-lg\" /> About\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\n                                    <i className=\"fa fa-address-card fa-lg\" /> Contact Us\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <span className=\"navbar-text ml-auto\">\n                            <Button outline onClick={this.toggleModal}>\n                                <i className=\"fa fa-sign-in fa-lg\" /> Login\n                            </Button>\n                        </span>\n                    </Collapse>\n                </div>\n                </Navbar>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" \n                                    innerRef={input => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={input => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={input => this.remember = input}  />\n                                    Remember Me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Header;","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["127","128","129","130","131","132","133"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render(){\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 characters or numbers',\n                                            isNUmber: 'Must be a number'\n\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Must be a valid email'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                             /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],["134","135"],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],["136","137"],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],["138","139"],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",["140"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { TransitionPropTypeKeys } from 'reactstrap/lib/utils';\n\n\nfunction RenderPartner({partner}) {\n    \n    if(partner) {\n        return (\n            <React.Fragment>\n                <Media object src={partner.image} alt={partner.name} width=\"150\"/>\n                <Media body className=\"ml-5 mb-4\">\n                    <Media heading>\n                        {partner.name}\n                    </Media>\n                    {partner.description}\n                </Media>\n            </React.Fragment>\n        )\n        \n    }\n    \n    return (\n        <div></div>\n    )\n}\n\nfunction About(props) {\n\n    const partners = props.partners.map(partner => {\n        return (\n            <Media tag=\"li\" key={partner.id}>\n                <RenderPartner partner = {partner}/>\n            </Media>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About Us</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-sm-6\">\n                    <h3>Our Mission</h3>\n                    <p>We present a curated database of the best campsites in the vast woods and backcountry of the World Wide Web Wilderness. We increase access to adventure for the public while promoting safe and respectful use of resources. The expert wilderness trekkers on our staff personally verify each campsite to make sure that they are up to our standards. We also present a platform for campers to share reviews on campsites they have visited with each other.</p>\n                </div>\n                <div className=\"col-sm-6\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\"><h3>Facts At a Glance</h3></CardHeader>\n                        <CardBody>\n                            <dl className=\"row\">\n                                <dt className=\"col-6\">Founded</dt>\n                                <dd className=\"col-6\">February 3, 2016</dd>\n                                <dt className=\"col-6\">No. of Campsites in 2019</dt>\n                                <dd className=\"col-6\">563</dd>\n                                <dt className=\"col-6\">No. of Reviews in 2019</dt>\n                                <dd className=\"col-6\">4388</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">42</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col\">\n                    <Card className=\"bg-light mt-3\">\n                        <CardBody>\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">I will not follow where the path may lead, but I will go where there is no path, and I will leave a trail.</p>\n                                <footer className=\"blockquote-footer\">Muriel Strode,{' '}\n                                    <cite title=\"Source Title\">\"Wind-Wafted Wild Flowers\" -\n                                    The Open Court, 1903</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Community Partners</h3>\n                </div>\n                <div className=\"col mt-4\">\n                    <Media list>\n                        {partners}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default About;","/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/bartwalker/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"143","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":16},{"ruleId":"147","severity":1,"message":"151","line":3,"column":25,"nodeType":"149","messageId":"150","endLine":3,"endColumn":39},{"ruleId":"147","severity":1,"message":"152","line":3,"column":61,"nodeType":"149","messageId":"150","endLine":3,"endColumn":70},{"ruleId":"147","severity":1,"message":"153","line":3,"column":115,"nodeType":"149","messageId":"150","endLine":3,"endColumn":118},{"ruleId":"147","severity":1,"message":"154","line":3,"column":120,"nodeType":"149","messageId":"150","endLine":3,"endColumn":123},{"ruleId":"147","severity":1,"message":"155","line":3,"column":156,"nodeType":"149","messageId":"150","endLine":3,"endColumn":160},{"ruleId":"147","severity":1,"message":"156","line":3,"column":162,"nodeType":"149","messageId":"150","endLine":3,"endColumn":171},{"ruleId":"147","severity":1,"message":"157","line":3,"column":173,"nodeType":"149","messageId":"150","endLine":3,"endColumn":178},{"ruleId":"158","severity":1,"message":"159","line":48,"column":29,"nodeType":"160","endLine":53,"endColumn":36},{"ruleId":"158","severity":1,"message":"161","line":70,"column":29,"nodeType":"160","endLine":78,"endColumn":31},{"ruleId":"158","severity":1,"message":"162","line":91,"column":29,"nodeType":"160","endLine":95,"endColumn":31},{"ruleId":"147","severity":1,"message":"163","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":27},{"ruleId":"158","severity":1,"message":"161","line":81,"column":37,"nodeType":"160","endLine":89,"endColumn":39},{"ruleId":"158","severity":1,"message":"161","line":106,"column":37,"nodeType":"160","endLine":114,"endColumn":39},{"ruleId":"158","severity":1,"message":"161","line":131,"column":37,"nodeType":"160","endLine":140,"endColumn":39},{"ruleId":"158","severity":1,"message":"161","line":159,"column":37,"nodeType":"160","endLine":166,"endColumn":39},{"ruleId":"158","severity":1,"message":"164","line":183,"column":45,"nodeType":"160","endLine":187,"endColumn":48},{"ruleId":"158","severity":1,"message":"159","line":193,"column":37,"nodeType":"160","endLine":194,"endColumn":66},{"ruleId":"158","severity":1,"message":"162","line":203,"column":37,"nodeType":"160","endLine":206,"endColumn":39},{"ruleId":"141","replacedBy":"165"},{"ruleId":"143","replacedBy":"166"},{"ruleId":"141","replacedBy":"167"},{"ruleId":"143","replacedBy":"168"},{"ruleId":"141","replacedBy":"169"},{"ruleId":"143","replacedBy":"170"},{"ruleId":"147","severity":1,"message":"171","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":32},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],["172"],["173"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'CardImgOverlay' is defined but never used.","'CardTitle' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'focusableElements' is defined but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["172"],["173"],["172"],["173"],["172"],["173"],"'TransitionPropTypeKeys' is defined but never used.","no-global-assign","no-unsafe-negation"]